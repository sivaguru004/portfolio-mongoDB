# Generated by Django 5.2.3 on 2025-07-06 06:39

import django.db.models.deletion
import django_mongodb_backend.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutPageContent',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_paragraph', models.TextField(default='Iâ€™m a self-taught web developer passionate about building and deploying real-world web applications. I specialize in full-stack development with a strong focus on backend logic and clean, user-friendly interfaces. I often work on projects that include user authentication and dynamic features.')),
                ('read_more_paragraph', models.TextField(default="I am focused on improving my skills every day by learning new technologies and building useful tools. I enjoy solving problems with code and aim to deliver efficient, scalable, and user-friendly solutions. I'm excited to contribute to meaningful projects and grow alongside a passionate team.", help_text="Content for the 'Read More' section.")),
            ],
        ),
        migrations.CreateModel(
            name='ContactDetail',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('linkedin', 'LinkedIn'), ('email', 'Email'), ('phone', 'Phone'), ('whatsapp', 'WhatsApp'), ('github', 'GitHub'), ('instagram', 'Instagram'), ('leetcode', 'LeetCode')], max_length=50, unique=True)),
                ('value', models.CharField(help_text='e.g., username for LinkedIn, email address, phone number', max_length=200)),
                ('icon_class', models.CharField(blank=True, help_text="Boxicons or Tabler Icons class, e.g., 'bx bxl-linkedin'. Auto-filled if left empty.", max_length=50, null=True)),
                ('url', models.URLField(blank=True, help_text='Full URL for the contact method', max_length=500, null=True)),
                ('order', models.IntegerField(default=0, help_text='Order in which contact details appear')),
            ],
            options={
                'verbose_name_plural': 'Contact Details',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('email_address', models.EmailField(max_length=254)),
                ('mobile_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email_subject', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='HomePageContent',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Sivaguru M', help_text='Enter Your Name', max_length=25)),
                ('roles', models.TextField(default='Full-stack Developer, Python Developer', help_text="Comma-separated roles, e.g., 'Full-stack Developer, Python Developer'")),
                ('introduction_text', models.TextField(default="Welcome to my portfolio! I'm a self-taught web developer passionate about building and deploying real-world web applications. I specialize in full-stack projects with a focus on robust backend logic and clean user interfaces, often incorporating user authentication. I'm eager to contribute my skills to meaningful projects and continue growing as a developer.")),
                ('cv_pdf', models.FileField(blank=True, help_text='Upload your CV PDF', null=True, upload_to='assets/')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='project_images/')),
                ('live_link', models.URLField(blank=True, max_length=500, null=True)),
                ('github_link', models.URLField(blank=True, max_length=500, null=True)),
                ('order', models.IntegerField(default=0, help_text='Order in which projects appear')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SkillCategory',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('icon_class', models.CharField(help_text="Boxicons class, e.g., 'bx bx-code-alt'", max_length=50)),
                ('order', models.IntegerField(default=0, help_text='Order in which categories appear')),
            ],
            options={
                'verbose_name_plural': 'Skill Categories',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('order', models.IntegerField(default=0, help_text='Order in which skills appear within their category')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='base.skillcategory')),
            ],
            options={
                'ordering': ['category__order', 'order'],
            },
        ),
    ]
